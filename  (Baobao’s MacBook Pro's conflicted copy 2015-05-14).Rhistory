),
legend = list(
x = 1.05,
y = 0.5,
font = list(family = ""),
bgcolor = "rgb(255,255,255)",
bordercolor = "transparent",
xanchor = "center",
yanchor = "top"
),
margin = list(r = 10),
paper_bgcolor = "#fff",
plot_bgcolor = "#fff",
hovermode = "x",
dragmode = "zoom",
separators = ".,",
hidesources = FALSE
)
layout <- list(
titlefont = list(
family = ""Open sans", verdana, arial, sans-serif",
size = 17,
color = "#444"
),
font = list(
family = ""Open sans", verdana, arial, sans-serif",
size = 12,
color = "#444"
),
showlegend = FALSE,
autosize = TRUE,
width = 792,
height = 792,
xaxis = list(
title = "xval",
titlefont = list(
family = ""Open sans", verdana, arial, sans-serif",
size = 14,
color = "#444"
),
range = c(-0.324720676085, 10.3490975625),
type = "linear",
rangemode = "normal",
autorange = TRUE,
showgrid = TRUE,
zeroline = TRUE,
showline = FALSE,
autotick = TRUE,
nticks = 0,
ticks = "",
showticklabels = TRUE,
tick0 = 0,
dtick = 1,
tickcolor = "rgb(127,127,127)",
tickangle = "auto",
tickfont = list(
family = ""Open sans", verdana, arial, sans-serif",
size = 12,
color = "#444"
),
exponentformat = "B",
showexponent = "all",
gridcolor = "#eee",
gridwidth = 1,
zerolinecolor = "#444",
zerolinewidth = 1
),
yaxis = list(
title = "yval",
titlefont = list(
family = ""Open sans", verdana, arial, sans-serif",
size = 14,
color = "#444"
),
range = c(-1.01650393512, 31.9517137407),
type = "linear",
rangemode = "normal",
autorange = TRUE,
showgrid = TRUE,
zeroline = TRUE,
showline = FALSE,
autotick = TRUE,
nticks = 0,
ticks = "",
showticklabels = TRUE,
tick0 = 0,
dtick = 1,
tickcolor = "rgb(127,127,127)",
tickangle = "auto",
tickfont = list(
family = ""Open sans", verdana, arial, sans-serif",
size = 12,
color = "#444"
),
exponentformat = "B",
showexponent = "all",
gridcolor = "#eee",
gridwidth = 1,
zerolinecolor = "#444",
zerolinewidth = 1
),
legend = list(
x = 1.05,
y = 0.5,
font = list(family = ""),
bgcolor = "rgb(255,255,255)",
bordercolor = "transparent",
xanchor = "center"#,
#yanchor = "top"
),
margin = list(r = 10),
paper_bgcolor = "#fff",
plot_bgcolor = "#fff",
hovermode = "x",
dragmode = "zoom",
separators = ".,",
hidesources = FALSE
)
legend = list(
x = 1.05,
y = 0.5,
font = list(family = ""),
bgcolor = "rgb(255,255,255)",
bordercolor = "transparent",
xanchor = "center",
yanchor = "top"
)
list(legend = list(
x = 1.05,
y = 0.5,
font = list(family = ""),
bgcolor = "rgb(255,255,255)",
bordercolor = "transparent",
xanchor = "center",
yanchor = "top"
),
margin = list(r = 10),
paper_bgcolor = "#fff",
plot_bgcolor = "#fff",
hovermode = "x",
dragmode = "zoom",
separators = ".,",
hidesources = FALSE)
list( yaxis = list(
title = "yval",
titlefont = list(
family = ""Open sans", verdana, arial, sans-serif",
size = 14,
color = "#444"
),
range = c(-1.01650393512, 31.9517137407),
type = "linear",
rangemode = "normal",
autorange = TRUE,
showgrid = TRUE,
zeroline = TRUE,
showline = FALSE,
autotick = TRUE,
nticks = 0,
ticks = "",
showticklabels = TRUE,
tick0 = 0,
dtick = 1,
tickcolor = "rgb(127,127,127)",
tickangle = "auto",
tickfont = list(
family = ""Open sans", verdana, arial, sans-serif",
size = 12,
color = "#444"
),
exponentformat = "B",
showexponent = "all",
gridcolor = "#eee",
gridwidth = 1,
zerolinecolor = "#444",
zerolinewidth = 1
),
legend = list(
x = 1.05,
y = 0.5,
font = list(family = ""),
bgcolor = "rgb(255,255,255)",
bordercolor = "transparent",
xanchor = "center",
yanchor = "top"
),
margin = list(r = 10),
paper_bgcolor = "#fff",
plot_bgcolor = "#fff",
hovermode = "x",
dragmode = "zoom",
separators = ".,",
hidesources = FALSE)
yaxis = list(
title = "yval",
titlefont = list(
family = ""Open sans", verdana, arial, sans-serif",
size = 14,
color = "#444"
),
range = c(-1.01650393512, 31.9517137407),
type = "linear",
rangemode = "normal",
autorange = TRUE,
showgrid = TRUE,
zeroline = TRUE,
showline = FALSE,
autotick = TRUE,
nticks = 0,
ticks = "",
showticklabels = TRUE,
tick0 = 0,
dtick = 1,
tickcolor = "rgb(127,127,127)",
tickangle = "auto",
tickfont = list(
family = ""Open sans", verdana, arial, sans-serif",
size = 12,
color = "#444"
),
exponentformat = "B",
showexponent = "all",
gridcolor = "#eee",
gridwidth = 1,
zerolinecolor = "#444",
zerolinewidth = 1
)
yaxis = list(
title = "yval",
titlefont = list(
family = ""Open sans", verdana, arial, sans-serif",
size = 14,
color = "#444"
),
range = c(-1.01650393512, 31.9517137407),
type = "linear",
rangemode = "normal",
autorange = TRUE,
showgrid = TRUE,
zeroline = TRUE,
showline = FALSE,
autotick = TRUE,
nticks = 0,
ticks = "",
showticklabels = TRUE,
tick0 = 0,
dtick = 1,
tickcolor = "rgb(127,127,127)",
tickangle = "auto",
tickfont = list(
family = ""Open sans", verdana, arial, sans-serif",
size = 12,
color = "#444"
),
exponentformat = "B",
showexponent = "all",
gridcolor = "#eee",
gridwidth = 1,
zerolinecolor = "#444",
zerolinewidth = 1
)
yaxis = list(
title = "yval",
titlefont = list(
family = ""Open sans", verdana, arial, sans-serif",
size = 14,
color = "#444"
),
range = c(-1.01650393512, 31.9517137407),
type = "linear",
rangemode = "normal",
autorange = TRUE,
showgrid = TRUE,
zeroline = TRUE,
showline = FALSE,
autotick = TRUE,
nticks = 0,
ticks = "",
showticklabels = TRUE,
tick0 = 0,
dtick = 1,
tickcolor = "rgb(127,127,127)",
tickangle = "auto",
tickfont = list(
family = ""Open sans", verdana, arial, sans-serif",
size = 12,
color = "#444"
),
exponentformat = "B",
showexponent = "all",
gridcolor = "#eee",
gridwidth = 1,
zerolinecolor = "#444",
zerolinewidth = 1
)
layout <- list(
titlefont = list(
family = "'Open sans', verdana, arial, sans-serif",
size = 17,
color = "#444"
),
font = list(
family = "'Open sans', verdana, arial, sans-serif",
size = 12,
color = "#444"
),
showlegend = FALSE,
autosize = TRUE,
width = 792,
height = 792,
xaxis = list(
title = "xval",
titlefont = list(
family = "'Open sans', verdana, arial, sans-serif",
size = 14,
color = "#444"
),
range = c(-0.324720676085, 10.3490975625),
type = "linear",
rangemode = "normal",
autorange = TRUE,
showgrid = TRUE,
zeroline = TRUE,
showline = FALSE,
autotick = TRUE,
nticks = 0,
ticks = "",
showticklabels = TRUE,
tick0 = 0,
dtick = 1,
tickcolor = "rgb(127,127,127)",
tickangle = "auto",
tickfont = list(
family = "'Open sans', verdana, arial, sans-serif",
size = 12,
color = "#444"
),
exponentformat = "B",
showexponent = "all",
gridcolor = "#eee",
gridwidth = 1,
zerolinecolor = "#444",
zerolinewidth = 1
),
yaxis = list(
title = "yval",
titlefont = list(
family = "'Open sans', verdana, arial, sans-serif",
size = 14,
color = "#444"
),
range = c(-1.01650393512, 31.9517137407),
type = "linear",
rangemode = "normal",
autorange = TRUE,
showgrid = TRUE,
zeroline = TRUE,
showline = FALSE,
autotick = TRUE,
nticks = 0,
ticks = "",
showticklabels = TRUE,
tick0 = 0,
dtick = 1,
tickcolor = "rgb(127,127,127)",
tickangle = "auto",
tickfont = list(
family = "'Open sans', verdana, arial, sans-serif",
size = 12,
color = "#444"
),
exponentformat = "B",
showexponent = "all",
gridcolor = "#eee",
gridwidth = 1,
zerolinecolor = "#444",
zerolinewidth = 1
),
legend = list(
x = 1.05,
y = 0.5,
font = list(family = ""),
bgcolor = "rgb(255,255,255)",
bordercolor = "transparent",
xanchor = "center",
yanchor = "top"
),
margin = list(r = 10),
paper_bgcolor = "#fff",
plot_bgcolor = "#fff",
hovermode = "x",
dragmode = "zoom",
separators = ".,",
hidesources = FALSE
)
response <- py$plotly(data, kwargs=list(layout=layout))
py <- plotly(username='13bzhang', key='x7x4awct1x')
response <- py$plotly(data, kwargs=list(layout=layout))
url <- response$url
url
p <- sp + coord_fixed()
ggplot_build(p)
rm(list = ls())
# file directory
setwd("~/Dropbox/confounding/data_code")
# load working file
#load("~/Dropbox/confounding/data_code/2017-10-08_rdat.RData")
# packages
#install.packages(c("ggplot2","ri","foreign",
#"xtable","reshape","memisc",
#"eeptools"))
library(tm)
library(stm)
library(ggplot2)
library(ri)
library(foreign)
library(xtable)
library(reshape)
library(memisc)
library(eeptools)
library(stargazer)
# load the function
source("theme_bw.R")
source("mynpc.R")
source("robustse.R")
source("sharpnull.R")
source("theme_bb.R")
#source("theme_bb2.R")
source("myggplot.R")
qog <- read.dta("qog_bas_ts_jan15.dta") # Quality of Goverance
qog <- qog[qog$year==2008,]
##############################
# Region Question
levels(qog$ht_region)
ee <- ifelse(qog$ht_region==levels(qog$ht_region)[1], 1, 0)
la <- ifelse(qog$ht_region==levels(qog$ht_region)[2], 1, 0)
na <- ifelse(qog$ht_region==levels(qog$ht_region)[3], 1, 0)
sa <- ifelse(qog$ht_region==levels(qog$ht_region)[4], 1, 0)
we <- ifelse(qog$ht_region==levels(qog$ht_region)[5], 1, 0)
ea <- ifelse(qog$ht_region==levels(qog$ht_region)[6], 1, 0)
se <- ifelse(qog$ht_region==levels(qog$ht_region)[7], 1, 0)
so <- ifelse(qog$ht_region==levels(qog$ht_region)[8], 1, 0)
pa <- ifelse(qog$ht_region==levels(qog$ht_region)[9], 1, 0)
ca <- ifelse(qog$ht_region==levels(qog$ht_region)[10], 1, 0)
dem <- ifelse(qog$chga_dem=="1. Democracy", 1, 0)
regions <- data.frame(ee, la, na, sa, we, ea, se, so, pa, ca, dem)
regions <- regions[is.na(qog$chga_dem)==FALSE,]
diff.func <- function(data.set=vars, col.num){
svar <- data.set[,col.num]
dem <- regions$dem
missing <- sum(is.na(svar))/length(svar)
print(missing)
if (missing!=1){
return(c(coeftest(lm(svar~dem))[2,], missing))
} else{
return(rep(NA, 5))
}
}
res <- matrix(NA, ncol(regions)-1, 5)
for (i in 1:(ncol(regions)-1)){
res[i,] <- diff.func(data.set=regions, col.num=i)
}
res <- data.frame(res)
names(res) <- c("coef", "se", "t", "p.val", "missing")
res$var <- names(regions)[1:ncol(regions)-1]
res$lab <- levels(qog$ht_region)
res <- res[order(-abs(res$coef), res$p.val),]
res$p.val <- round(res$p.val, 3)
res <- res[,c(7,1,2)]
res[,2:3] <- round(res[,2:3], 3)
stargazer(res, summary = F, rownames=F)
# Other stuff
qog <- read.dta("qog_bas_ts_jan15.dta") # Quality of Goverance
D <- data.frame(qog$ccodecow[qog$year==2008], qog$chga_dem[qog$year==2008])
names(D) <- c("ccodecow", "dem")
D$dem <- ifelse(D$dem=="1. Democracy", 1, 0)
qog <- qog[qog$year==1998,]
###################################
# Merge in Other Data: alliance
alliance <- read.dta("cow/version4.1_dta/alliance_v4.1_by_dyad_yearly.dta")
alliance <- alliance[alliance$state_name1=="United States of America" &
alliance$year==1998,]
alliance$ccodecow <- alliance$ccode2
alliance <- alliance[,c(14:17,20)]
alliance <- aggregate(alliance, by=list(alliance$ccodecow), FUN=sum, na.rm=TRUE)
qog <- merge(x=qog, y=alliance, all.x = T, by="ccodecow")
qog$defense[is.na(qog$defense)] <- 0
qog$neutrality[is.na(qog$neutrality)] <- 0
qog$nonaggression[is.na(qog$nonaggression)] <- 0
qog$entente[is.na(qog$entente)] <- 0
qog$anytreaty <- ifelse(qog$defense+qog$neutrality+
qog$nonaggression+qog$entente>0, 1, 0)
alliance <- read.dta("cow/version4.1_dta/alliance_v4.1_by_dyad_yearly.dta")
alliance <- alliance[alliance$state_name1=="United States of America" &
alliance$year==1998,]
alliance$ccodecow <- alliance$ccode2
alliance <- alliance[,c(14:17,20)]
alliance <- aggregate(alliance, by=list(alliance$ccodecow), FUN=sum, na.rm=TRUE)
qog <- merge(x=qog, y=alliance, all.x = T, by="ccodecow")
qog$defense[is.na(qog$defense)] <- 0
qog$neutrality[is.na(qog$neutrality)] <- 0
alliance <- read.dta("cow/version4.1_dta/alliance_v4.1_by_dyad_yearly.dta")
alliance <- alliance[alliance$state_name1=="United States of America" &
alliance$year==1998,]
alliance$ccodecow <- alliance$ccode2
alliance <- alliance[,c(14:17,20)]
alliance <- aggregate(alliance, by=list(alliance$ccodecow), FUN=sum, na.rm=TRUE)
qog <- merge(x=qog, y=alliance, all.x = T, by="ccodecow")
head(qog)
qog <- merge(x=qog, y=alliance, all.x = T, by="ccodecow")
qog$defense[is.na(qog$defense)] <- 0
qog$neutrality[is.na(qog$neutrality)] <- 0
