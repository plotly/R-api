require=function n(r,t,e){function o(u,f){if(!t[u]){if(!r[u]){var c="function"==typeof require&&require;if(!f&&c)return c(u,!0);if(i)return i(u,!0);var a=new Error("Cannot find module '"+u+"'");throw a.code="MODULE_NOT_FOUND",a}var s=t[u]={exports:{}};r[u][0].call(s.exports,function(n){var t=r[u][1][n];return o(t?t:n)},s,s.exports,n,r,t,e)}return t[u].exports}for(var i="function"==typeof require&&require,u=0;u<e.length;u++)o(e[u]);return o}({topojson:[function(r,t,e){!function(){function r(n,r){function t(r){var t,e=n.arcs[0>r?~r:r],o=e[0];return n.transform?(t=[0,0],e.forEach(function(n){t[0]+=n[0],t[1]+=n[1]})):t=e[e.length-1],0>r?[t,o]:[o,t]}function e(n,r){for(var t in n){var e=n[t];delete r[e.start],delete e.start,delete e.end,e.forEach(function(n){o[0>n?~n:n]=1}),f.push(e)}}var o={},i={},u={},f=[],c=-1;return r.forEach(function(t,e){var o,i=n.arcs[0>t?~t:t];i.length<3&&!i[1][0]&&!i[1][1]&&(o=r[++c],r[c]=t,r[e]=o)}),r.forEach(function(n){var r,e,o=t(n),f=o[0],c=o[1];if(r=u[f])if(delete u[r.end],r.push(n),r.end=c,e=i[c]){delete i[e.start];var a=e===r?r:r.concat(e);i[a.start=r.start]=u[a.end=e.end]=a}else i[r.start]=u[r.end]=r;else if(r=i[c])if(delete i[r.start],r.unshift(n),r.start=f,e=u[f]){delete u[e.end];var s=e===r?r:e.concat(r);i[s.start=e.start]=u[s.end=r.end]=s}else i[r.start]=u[r.end]=r;else r=[n],i[r.start=f]=u[r.end=c]=r}),e(u,i),e(i,u),r.forEach(function(n){o[0>n?~n:n]||f.push([n])}),f}function e(n,t,e){function o(n){var r=0>n?~n:n;(s[r]||(s[r]=[])).push({i:n,g:a})}function i(n){n.forEach(o)}function u(n){n.forEach(i)}function f(n){"GeometryCollection"===n.type?n.geometries.forEach(f):n.type in l&&(a=n,l[n.type](n.arcs))}var c=[];if(arguments.length>1){var a,s=[],l={LineString:i,MultiLineString:u,Polygon:u,MultiPolygon:function(n){n.forEach(u)}};f(t),s.forEach(arguments.length<3?function(n){c.push(n[0].i)}:function(n){e(n[0].g,n[n.length-1].g)&&c.push(n[0].i)})}else for(var p=0,h=n.arcs.length;h>p;++p)c.push(p);return{type:"MultiLineString",arcs:r(n,c)}}function o(t,e){function o(n){n.forEach(function(r){r.forEach(function(r){(u[r=0>r?~r:r]||(u[r]=[])).push(n)})}),c.push(n)}function i(n){return p(f(t,{type:"Polygon",arcs:[n]}).coordinates[0])>0}var u={},c=[],a=[];return e.forEach(function(n){"Polygon"===n.type?o(n.arcs):"MultiPolygon"===n.type&&n.arcs.forEach(o)}),c.forEach(function(n){if(!n._){var r=[],t=[n];for(n._=1,a.push(r);n=t.pop();)r.push(n),n.forEach(function(n){n.forEach(function(n){u[0>n?~n:n].forEach(function(n){n._||(n._=1,t.push(n))})})})}}),c.forEach(function(n){delete n._}),{type:"MultiPolygon",arcs:a.map(function(e){var o=[];if(e.forEach(function(n){n.forEach(function(n){n.forEach(function(n){u[0>n?~n:n].length<2&&o.push(n)})})}),o=r(t,o),(n=o.length)>1)for(var f,c=i(e[0][0]),a=0;a<n;++a)if(c===i(o[a])){f=o[0],o[0]=o[a],o[a]=f;break}return o})}}function i(n,r){return"GeometryCollection"===r.type?{type:"FeatureCollection",features:r.geometries.map(function(r){return u(n,r)})}:u(n,r)}function u(n,r){var t={type:"Feature",id:r.id,properties:r.properties||{},geometry:f(n,r)};return null==r.id&&delete t.id,t}function f(n,r){function t(n,r){r.length&&r.pop();for(var t,e=s[0>n?~n:n],o=0,i=e.length;i>o;++o)r.push(t=e[o].slice()),a(t,o);0>n&&c(r,i)}function e(n){return n=n.slice(),a(n,0),n}function o(n){for(var r=[],e=0,o=n.length;o>e;++e)t(n[e],r);return r.length<2&&r.push(r[0].slice()),r}function i(n){for(var r=o(n);r.length<4;)r.push(r[0].slice());return r}function u(n){return n.map(i)}function f(n){var r=n.type;return"GeometryCollection"===r?{type:r,geometries:n.geometries.map(f)}:r in l?{type:r,coordinates:l[r](n)}:null}var a=y(n.transform),s=n.arcs,l={Point:function(n){return e(n.coordinates)},MultiPoint:function(n){return n.coordinates.map(e)},LineString:function(n){return o(n.arcs)},MultiLineString:function(n){return n.arcs.map(o)},Polygon:function(n){return u(n.arcs)},MultiPolygon:function(n){return n.arcs.map(u)}};return f(r)}function c(n,r){for(var t,e=n.length,o=e-r;o<--e;)t=n[o],n[o++]=n[e],n[e]=t}function a(n,r){for(var t=0,e=n.length;e>t;){var o=t+e>>>1;n[o]<r?t=o+1:e=o}return t}function s(n){function r(n,r){n.forEach(function(n){0>n&&(n=~n);var t=o[n];t?t.push(r):o[n]=[r]})}function t(n,t){n.forEach(function(n){r(n,t)})}function e(n,r){"GeometryCollection"===n.type?n.geometries.forEach(function(n){e(n,r)}):n.type in u&&u[n.type](n.arcs,r)}var o={},i=n.map(function(){return[]}),u={LineString:r,MultiLineString:t,Polygon:t,MultiPolygon:function(n,r){n.forEach(function(n){t(n,r)})}};n.forEach(e);for(var f in o)for(var c=o[f],s=c.length,l=0;s>l;++l)for(var p=l+1;s>p;++p){var h,v=c[l],g=c[p];(h=i[v])[f=a(h,g)]!==g&&h.splice(f,0,g),(h=i[g])[f=a(h,v)]!==v&&h.splice(f,0,v)}return i}function l(n,r){function t(n){i.remove(n),n[1][2]=r(n),i.push(n)}var e=y(n.transform),o=d(n.transform),i=g();return r||(r=h),n.arcs.forEach(function(n){for(var u,f,c=[],a=0,s=0,l=n.length;l>s;++s)f=n[s],e(n[s]=[f[0],f[1],1/0],s);for(var s=1,l=n.length-1;l>s;++s)u=n.slice(s-1,s+2),u[1][2]=r(u),c.push(u),i.push(u);for(var s=0,l=c.length;l>s;++s)u=c[s],u.previous=c[s-1],u.next=c[s+1];for(;u=i.pop();){var p=u.previous,h=u.next;u[1][2]<a?u[1][2]=a:a=u[1][2],p&&(p.next=h,p[2]=u[2],t(p)),h&&(h.previous=p,h[0]=u[0],t(h))}n.forEach(o)}),n}function p(n){for(var r,t=-1,e=n.length,o=n[e-1],i=0;++t<e;)r=o,o=n[t],i+=r[0]*o[1]-r[1]*o[0];return.5*i}function h(n){var r=n[0],t=n[1],e=n[2];return Math.abs((r[0]-e[0])*(t[1]-r[1])-(r[0]-t[0])*(e[1]-r[1]))}function v(n,r){return n[1][2]-r[1][2]}function g(){function n(n,r){for(;r>0;){var t=(r+1>>1)-1,o=e[t];if(v(n,o)>=0)break;e[o._=r]=o,e[n._=r=t]=n}}function r(n,r){for(;;){var t=r+1<<1,i=t-1,u=r,f=e[u];if(o>i&&v(e[i],f)<0&&(f=e[u=i]),o>t&&v(e[t],f)<0&&(f=e[u=t]),u===r)break;e[f._=r]=f,e[n._=r=u]=n}}var t={},e=[],o=0;return t.push=function(r){return n(e[r._=o]=r,o++),o},t.pop=function(){if(!(0>=o)){var n,t=e[0];return--o>0&&(n=e[o],r(e[n._=0]=n,0)),t}},t.remove=function(t){var i,u=t._;if(e[u]===t)return u!==--o&&(i=e[o],(v(i,t)<0?n:r)(e[i._=u]=i,u)),u},t}function y(n){if(!n)return m;var r,t,e=n.scale[0],o=n.scale[1],i=n.translate[0],u=n.translate[1];return function(n,f){f||(r=t=0),n[0]=(r+=n[0])*e+i,n[1]=(t+=n[1])*o+u}}function d(n){if(!n)return m;var r,t,e=n.scale[0],o=n.scale[1],i=n.translate[0],u=n.translate[1];return function(n,f){f||(r=t=0);var c=(n[0]-i)/e|0,a=(n[1]-u)/o|0;n[0]=c-r,n[1]=a-t,r=c,t=a}}function m(){}var E={version:"1.6.19",mesh:function(n){return f(n,e.apply(this,arguments))},meshArcs:e,merge:function(n){return f(n,o.apply(this,arguments))},mergeArcs:o,feature:i,neighbors:s,presimplify:l};"function"==typeof define&&define.amd?define(E):"object"==typeof t&&t.exports?t.exports=E:this.topojson=E}()},{}]},{},[]);