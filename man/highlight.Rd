% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/highlight.R
\name{highlight}
\alias{highlight}
\title{Highlight graphical elements in multiple linked views}
\usage{
highlight(p, on = "plotly_selected", off = "plotly_relayout",
  persistent = FALSE, dynamic = FALSE, color = NULL, selectize = FALSE,
  defaultValues = NULL, opacityDim = 0.2, selected = attrs_selected(),
  ...)
}
\arguments{
\item{p}{a plotly visualization.}

\item{on}{turn on a selection on which event(s)? Likely candidates are
'plotly_hover', 'plotly_click', 'plotly_selected'. To disable on events 
altogether, use \code{NULL}.}

\item{off}{turn off a selection on which event(s)? Likely candidates are
'plotly_unhover', 'plotly_doubleclick', 'plotly_deselect'. To disable off 
events altogether, use \code{NULL}.}

\item{persistent}{should selections persist (i.e., accumulate)?}

\item{dynamic}{should a widget for changing selection colors be included?}

\item{color}{character string of color(s) to use for 
highlighting selections. See \code{\link{toRGB}()} for valid color
specifications. If \code{NULL} (the default), the color of selected marks
are not altered.}

\item{selectize}{provide a selectize.js widget for selecting keys? Note that 
the label used for this widget derives from the groupName of the SharedData object.}

\item{defaultValues}{a vector of values for setting a "default selection".
These values should match the key attribute.}

\item{opacityDim}{a number between 0 and 1 used to reduce the
opacity of non-selected traces (by multiplying with the existing opacity).}

\item{selected}{attributes of the selection, see \code{\link{attrs_selected}()}.}

\item{...}{currently not supported.}

\item{other}{attributes of the other (i.e., non-selected) traces, 
see \code{\link{attrs_other}()}.}
}
\description{
This function sets a variety of options for brushing (i.e., highlighting)
plotly graphs. Use this function to set options (or populate widgets) 
for a \emph{single} plot. When linking multiple plots, use 
\code{\link{options}()} to set "global" options, where the option name 
matches the relevant argument name. For instance, 
to link multiple plots with \code{persistent} selection, set
\code{options(persistent = TRUE)}. To see an example linking plotly to 
leaflet, see \code{demo("highlight-leaflet", package = "leaflet")}
}
\examples{

# These examples are designed to show you how to highlight/brush a *single*
# view. For examples of multiple linked views, see `demo(package = "plotly")` 
library(crosstalk)
d <- SharedData$new(txhousing, ~city)
p <- ggplot(d, aes(date, median, group = city)) + geom_line()
gg <- ggplotly(p, tooltip = "city") 
highlight(gg, on = "plotly_click", persistent = TRUE, dynamic = TRUE)

# supply custom colors to the brush 
cols <- toRGB(RColorBrewer::brewer.pal(3, "Dark2"), 0.5)
highlight(gg, on = "plotly_click", color = cols, persistent = TRUE, dynamic = TRUE)

# Use attrs_selected() for complete control over the selection appearance
# note any relevant colors you specify here should override the color argument
s <- attrs_selected(
  showlegend = TRUE,
  mode = "lines+markers",
  marker = list(symbol = "x")
)

highlight(
 layout(gg, showlegend = TRUE), 
 on = "plotly_click", selected = s,
 persistent = TRUE, dynamic = TRUE
)

}
\references{
\url{https://cpsievert.github.io/plotly_book/linking-views-without-shiny.html}
}
\seealso{
\code{\link{attrs_selected}()}, \code{\link{attrs_other}()}
}
\author{
Carson Sievert
}
